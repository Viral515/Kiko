#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Kiko Voice Assistant
"""

import subprocess
import sys
import os
import platform

def install_pyaudio():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç PyAudio —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º pipwin –∏–ª–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
    try:
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyAudio...")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pipwin
        try:
            subprocess.check_call([sys.executable, "-m", "pip", "install", "pipwin"])
            print("‚úÖ pipwin —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except:
            print("‚ö†Ô∏è pipwin –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã")
        
        # –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ pipwin
        try:
            subprocess.check_call([sys.executable, "-m", "pipwin", "install", "pyaudio"])
            print("‚úÖ PyAudio —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ pipwin")
            return True
        except:
            print("‚ö†Ô∏è pipwin –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π URL")
        
        # –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π URL
        try:
            python_version = f"{sys.version_info.major}{sys.version_info.minor}"
            architecture = "win_amd64" if platform.architecture()[0] == "64bit" else "win32"
            url = f"https://www.lfd.uci.edu/~gohlke/pythonlibs/PyAudio-0.2.11-cp{python_version}-cp{python_version}-{architecture}.whl"
            subprocess.check_call([sys.executable, "-m", "pip", "install", url])
            print("‚úÖ PyAudio —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π URL")
            return True
        except:
            print("‚ö†Ô∏è –ü—Ä—è–º–æ–π URL –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
        
        # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –æ–±—ã—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
        try:
            subprocess.check_call([sys.executable, "-m", "pip", "install", "pyaudio"])
            print("‚úÖ PyAudio —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º")
            return True
        except:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PyAudio")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PyAudio: {e}")
        return False

def install_requirements():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt"""
    try:
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π requirements –±–µ–∑ PyAudio
        temp_requirements = []
        with open("requirements.txt", "r", encoding="utf-8") as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith("#") and "pyaudio" not in line.lower():
                    temp_requirements.append(line)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open("temp_requirements.txt", "w", encoding="utf-8") as f:
            f.write("\n".join(temp_requirements))
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±–µ–∑ PyAudio
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "temp_requirements.txt"])
        print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PyAudio –æ—Ç–¥–µ–ª—å–Ω–æ
        if install_pyaudio():
            print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print("‚ö†Ô∏è PyAudio –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
            return True
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists("temp_requirements.txt"):
            os.remove("temp_requirements.txt")

def check_vosk_model():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–µ–ª–∏ Vosk"""
    model_path = "src/vosk-model-small-ru-0.22"
    if not os.path.exists(model_path):
        print("‚ö†Ô∏è –ú–æ–¥–µ–ª—å Vosk –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("–°–∫–∞—á–∞–π—Ç–µ –º–æ–¥–µ–ª—å —Å https://alphacephei.com/vosk/models")
        print(f"–ò —Ä–∞—Å–ø–∞–∫—É–π—Ç–µ –≤ –ø–∞–ø–∫—É: {model_path}")
        return False
    print("‚úÖ –ú–æ–¥–µ–ª—å Vosk –Ω–∞–π–¥–µ–Ω–∞")
    return True

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        import vosk
        print("‚úÖ vosk –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError:
        print("‚ùå vosk –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è")
        return False
    
    try:
        import pyaudio
        print("‚úÖ pyaudio –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError:
        print("‚ùå pyaudio –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è")
        return False
    
    try:
        import pygame
        print("‚úÖ pygame –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError:
        print("‚ùå pygame –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è")
        return False
    
    try:
        import yaml
        print("‚úÖ yaml –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError:
        print("‚ùå yaml –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è")
        return False
    
    try:
        import pystray
        print("‚úÖ pystray –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError:
        print("‚ùå pystray –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è")
        return False
    
    return True

if __name__ == "__main__":
    print("üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kiko Voice Assistant")
    print("=" * 50)
    
    if install_requirements():
        if test_imports():
            check_vosk_model()
            print("\nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python src/main.py")
        else:
            print("\n‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏")
            print("–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")
        print("\nüí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Visual Studio Build Tools")
        print("2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: pip install pipwin && pipwin install pyaudio")
        print("3. –°–∫–∞—á–∞–π—Ç–µ PyAudio wheel —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é")
