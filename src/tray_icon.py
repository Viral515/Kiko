import pystray
from PIL import Image, ImageDraw
import threading
import os
import sys
from assistant.core import VoiceAssistant

class TrayIcon:
    def __init__(self):
        self.assistant = None
        self.assistant_thread = None
        self.is_running = False
        self.icon = None
        
    def create_icon_image(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç—Ä–µ—è"""
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 64x64 –ø–∏–∫—Å–µ–ª–µ–π
        image = Image.new('RGBA', (64, 64), (0, 0, 0, 0))
        draw = ImageDraw.Draw(image)
        
        # –†–∏—Å—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫—Ä—É–≥ —Å –±—É–∫–≤–æ–π K
        draw.ellipse([8, 8, 56, 56], fill=(0, 120, 215, 255), outline=(255, 255, 255, 255), width=2)
        draw.text((24, 20), "K", fill=(255, 255, 255, 255), font=None)
        
        return image
    
    def create_menu(self):
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é"""
        return pystray.Menu(
            pystray.MenuItem("–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞", self.start_assistant),
            pystray.MenuItem("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞", self.stop_assistant),
            pystray.Menu.SEPARATOR,
            pystray.MenuItem("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", self.open_settings),
            pystray.MenuItem("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", self.show_about),
            pystray.Menu.SEPARATOR,
            pystray.MenuItem("–í—ã—Ö–æ–¥", self.quit_app)
        )
    
    def start_assistant(self, icon, item):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        if not self.is_running:
            print("üîÑ –ó–∞–ø—É—Å–∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞...")
            print(f" –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
            try:
                self.is_running = True
                self.assistant = VoiceAssistant()
                self.assistant_thread = threading.Thread(target=self.run_assistant, daemon=True)
                self.assistant_thread.start()
                print("üéôÔ∏è –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {e}")
                self.is_running = False
    
    def stop_assistant(self, icon, item):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
        if self.is_running:
            self.is_running = False
            if self.assistant:
                # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                self.assistant.stop()
            print("üõë –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def run_assistant(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"""
        try:
            print("üéØ –ó–∞–ø—É—Å–∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...")
            self.assistant.run()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {e}")
            import traceback
            traceback.print_exc()
            self.is_running = False
    
    def open_settings(self, icon, item):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)"""
        print("‚öôÔ∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    
    def show_about(self, icon, item):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
        print("‚ÑπÔ∏è Kiko Voice Assistant v1.0")
        print("–ì–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è Windows")
    
    def quit_app(self, icon, item):
        """–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.stop_assistant(None, None)
        icon.stop()
        sys.exit(0)
    
    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç tray icon"""
        # –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É
        image = self.create_icon_image()
        menu = self.create_menu()
        
        self.icon = pystray.Icon(
            "kiko_assistant",
            image,
            "Kiko Voice Assistant",
            menu
        )
        
        print("üñ•Ô∏è Tray icon –∑–∞–ø—É—â–µ–Ω")
        self.icon.run()

if __name__ == "__main__":
    tray = TrayIcon()
    tray.run()
